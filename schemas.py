from pydantic import BaseModel, EmailStr
from typing import Optional, List
from enum import Enum

# Felhaszn√°l√≥ bejelentkez√©s√©hez sz√ºks√©ges s√©ma
class UserLogin(BaseModel):
    email: EmailStr
    password: str

# Token s√©ma az autentik√°ci√≥hoz
class Token(BaseModel):
    access_token: str
    token_type: str
    
# üîπ Felhaszn√°l√≥ t√≠pusa
class UserType(str, Enum):
    customer = "customer"
    professional = "professional"

# üìå 1Ô∏è‚É£ Felhaszn√°l√≥ l√©trehoz√°sa
class UserCreate(BaseModel):
    name: str
    email: EmailStr
    password: str
    user_type: UserType
    phone: Optional[str] = None
    location_id: Optional[int] = None

# üìå 2Ô∏è‚É£ Felhaszn√°l√≥i v√°laszmodell
class UserResponse(BaseModel):
    id: int
    name: str
    email: EmailStr
    user_type: UserType
    phone: Optional[str]

    class Config:
        from_attributes = True

# Felhaszn√°l√≥ friss√≠t√©se (UserUpdate) - ezt kell hozz√°adni!
class UserUpdate(BaseModel):
    name: Optional[str] = None
    email: Optional[EmailStr] = None
    password: Optional[str] = None

# üìå 3Ô∏è‚É£ Lok√°ci√≥ modellje
class LocationResponse(BaseModel):
    id: int
    country_code: str
    city: str
    address: Optional[str] = None
    latitude: Optional[float] = None
    longitude: Optional[float] = None

    class Config:
        from_attributes = True

# Lok√°ci√≥ l√©trehoz√°s√°hoz sz√ºks√©ges s√©ma
class LocationCreate(BaseModel):
    country_code: str
    city: str


# üìå 4Ô∏è‚É£ Szakember l√©trehoz√°sa (most m√°r t√∂bb szakm√°val)
class ProfessionalCreate(BaseModel):
    user_id: int
    experience_years: Optional[int] = None
    bio: Optional[str] = None
    location_id: Optional[int] = None
    professions: List[int]  # Szakm√°k list√°ja (profession_id-k)

# üìå 5Ô∏è‚É£ Szakember v√°laszmodell
class ProfessionalResponse(BaseModel):
    id: int
    user_id: int
    experience_years: Optional[int]
    bio: Optional[str]
    location_id: Optional[int]
    professions: List[int]  # Szakm√°k list√°ja

    class Config:
        from_attributes = True
